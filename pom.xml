<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (C) 2016 VSCT
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vsct.dt.strowgr</groupId>
    <artifactId>strowgr-parent</artifactId>
    <packaging>pom</packaging>
    <version>0.2.4-SNAPSHOT</version>

    <modules>
        <!--Java modules-->
        <module>admin</module>
        <module>aggregator</module>
    </modules>

    <scm>
        <developerConnection>scm:git:git@github.com:voyages-sncf-technologies/strowgr.git</developerConnection>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <go.sdk.version>1.7</go.sdk.version>
        <java.version>1.8</java.version>
        <docker.registry>dockerregistrydev.socrate.vsct.fr/</docker.registry>
        <docker.namespace>strowgr</docker.namespace>
        <docker.image>${project.artifactId}</docker.image>
        <project.build.finalNameWithExt>${project.build.finalName}</project.build.finalNameWithExt>
        <maven.javadoc.skip>true</maven.javadoc.skip>
    </properties>

    <profiles>
        <profile>
            <id>golang-http-proxy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.igormaznitsa</groupId>
                        <artifactId>mvn-golang-wrapper</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <env>
                                <http_proxy>bluelagoon-bck:22222</http_proxy>
                                <https_proxy>bluelagoon-bck:22222</https_proxy>
                            </env>
                            <goVersion>${go.sdk.version}</goVersion>
                            <command/>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--Go profile-->
        <profile>
            <id>target-linux</id>
            <properties>
                <target.os>linux</target.os>
                <target.arch>amd64</target.arch>
                <target.ext></target.ext>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>target-windows</id>
            <properties>
                <target.os>windows</target.os>
                <target.arch>amd64</target.arch>
                <target.ext>.exe</target.ext>
            </properties>
        </profile>

        <profile>
            <id>target-darwin</id>
            <properties>
                <target.os>darwin</target.os>
                <target.arch>amd64</target.arch>
                <target.ext></target.ext>
            </properties>
        </profile>
        <profile>
            <id>build-docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.igormaznitsa</groupId>
                            <artifactId>mvn-golang-wrapper</artifactId>
                            <version>2.1.0</version>
                        </plugin>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>0.4.10</version>
                            <configuration>
                                <dockerDirectory>${project.build.directory}/docker-filtered</dockerDirectory>
                                <imageName>${docker.registry}${docker.namespace}/${docker.image}:${project.version}
                                </imageName>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalNameWithExt}</include>
                                    </resource>
                                </resources>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                    <imageTag>latest</imageTag>
                                </imageTags>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>default-build</id>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.7.201606060606</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <createDependencyReducedPom>true</createDependencyReducedPom>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>

                    </configuration>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>resources</goal>
                            </goals>
                            <phase>process-resources</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>dt-snapshots</id>
            <name>DT Snapshots</name>
            <url>http://nexus/content/repositories/dt-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>dt-releases</id>
            <name>DT Releases</name>
            <url>http://nexus/content/repositories/dt-releases/</url>
        </repository>
    </distributionManagement>

</project>
